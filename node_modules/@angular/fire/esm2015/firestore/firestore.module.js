/**
 * @fileoverview added by tsickle
 * Generated from: firestore.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { AngularFirestore, ENABLE_PERSISTENCE, PERSISTENCE_SETTINGS } from './firestore';
import * as ɵngcc0 from '@angular/core';
export class AngularFirestoreModule {
    /**
     * Attempt to enable persistent storage, if possible
     * @param {?=} persistenceSettings
     * @return {?}
     */
    static enablePersistence(persistenceSettings) {
        return {
            ngModule: AngularFirestoreModule,
            providers: [
                { provide: ENABLE_PERSISTENCE, useValue: true },
                { provide: PERSISTENCE_SETTINGS, useValue: persistenceSettings },
            ]
        };
    }
}
AngularFirestoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFirestoreModule });
AngularFirestoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFirestoreModule_Factory(t) { return new (t || AngularFirestoreModule)(); }, providers: [AngularFirestore] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFirestoreModule, [{
        type: NgModule,
        args: [{
                providers: [AngularFirestore]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZXN0b3JlLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vaG9tZS9ydW5uZXIvd29yay9hbmd1bGFyZmlyZS9hbmd1bGFyZmlyZS9zcmMvZmlyZXN0b3JlL2ZpcmVzdG9yZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsa0JBQWtCLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxhQUFhLENBQUM7O0FBS3pGLE1BQU0sT0FBTyxzQkFBc0I7QUFDbkM7QUFDRTtBQUNFO0FBQ2lDO0FBQW1CO0FBQVEsSUFBOUQsTUFBTSxDQUFDLGlCQUFpQixDQUFDLG1CQUF5QztBQUFJLFFBQ3BFLE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSxzQkFBc0I7QUFDdEMsWUFBTSxTQUFTLEVBQUU7QUFDakIsZ0JBQVEsRUFBRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtBQUN2RCxnQkFBUSxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxRQUFRLEVBQUUsbUJBQW1CLEVBQUU7QUFDeEUsYUFBTztBQUNQLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNIO2tEQWhCQyxRQUFRLFNBQUMsa0JBQ1I7S0FBUyxFQUFFLENBQUUsZ0JBQWdCLENBQUUsY0FDaEM7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBlcnNpc3RlbmNlU2V0dGluZ3MgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgQW5ndWxhckZpcmVzdG9yZSwgRU5BQkxFX1BFUlNJU1RFTkNFLCBQRVJTSVNURU5DRV9TRVRUSU5HUyB9IGZyb20gJy4vZmlyZXN0b3JlJztcblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbIEFuZ3VsYXJGaXJlc3RvcmUgXVxufSlcbmV4cG9ydCBjbGFzcyBBbmd1bGFyRmlyZXN0b3JlTW9kdWxlIHtcbiAgLyoqXG4gICAqIEF0dGVtcHQgdG8gZW5hYmxlIHBlcnNpc3RlbnQgc3RvcmFnZSwgaWYgcG9zc2libGVcbiAgICovXG4gIHN0YXRpYyBlbmFibGVQZXJzaXN0ZW5jZShwZXJzaXN0ZW5jZVNldHRpbmdzPzogUGVyc2lzdGVuY2VTZXR0aW5ncyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8QW5ndWxhckZpcmVzdG9yZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQW5ndWxhckZpcmVzdG9yZU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7IHByb3ZpZGU6IEVOQUJMRV9QRVJTSVNURU5DRSwgdXNlVmFsdWU6IHRydWUgfSxcbiAgICAgICAgeyBwcm92aWRlOiBQRVJTSVNURU5DRV9TRVRUSU5HUywgdXNlVmFsdWU6IHBlcnNpc3RlbmNlU2V0dGluZ3MgfSxcbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=