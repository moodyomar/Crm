{"version":3,"file":"angular-fire-performance.umd.js","sources":["../../../src/performance/base.ts","../../../src/performance/performance.ts","../../../src/performance/performance.service.ts","../../../src/performance/performance.module.ts"],"names":["InjectionToken","of","switchMap","isPlatformBrowser","EMPTY","map","ɵfetchInstance","shareReplay","ɵlazySDKProxy","Injectable","FirebaseApp","Optional","Inject","NgZone","PLATFORM_ID","Observable","tap","ɵapplyMixins","first","ApplicationRef","NgModule"],"mappings":"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","sourcesContent":["export const proxyPolyfillCompat = {\n  trace: null,\n  instrumentationEnabled: null,\n  dataCollectionEnabled: null,\n};\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { EMPTY, Observable, of, Subscription } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { FirebaseApp, ɵapplyMixins, ɵlazySDKProxy, ɵPromiseProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends ɵPromiseProxy<firebase.performance.Performance> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n\n  private readonly performance: Observable<firebase.performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled: boolean | null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled: boolean | null,\n    private zone: NgZone,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : EMPTY),\n      map(() => ɵfetchInstance(`performance`, 'AngularFirePerformance', app, () => {\n        const performance = zone.runOutsideAngular(() => app.performance());\n        if (instrumentationEnabled === false) {\n          performance.instrumentationEnabled = false;\n        }\n        if (dataCollectionEnabled === false) {\n          performance.dataCollectionEnabled = false;\n        }\n        return performance;\n      }, [instrumentationEnabled, dataCollectionEnabled])),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n}\n\nconst trace$ = (traceId: string) => {\n  if (typeof window !== 'undefined' && window.performance) {\n    const entries = window.performance.getEntriesByName(traceId, 'measure') || [];\n    const startMarkName = `_${traceId}Start[${entries.length}]`;\n    const endMarkName = `_${traceId}End[${entries.length}]`;\n    return new Observable<void>(emitter => {\n      window.performance.mark(startMarkName);\n      emitter.next();\n      return {\n        unsubscribe: () => {\n          window.performance.mark(endMarkName);\n          window.performance.measure(traceId, startMarkName, endMarkName);\n        }\n      };\n    });\n  } else {\n    return EMPTY;\n  }\n};\n\nexport const traceUntil = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      a => test(a) && traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceWhile = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  let traceSubscription: Subscription | undefined;\n  return source$.pipe(\n    tap(\n      a => {\n        if (test(a)) {\n          traceSubscription = traceSubscription || trace$(name).subscribe();\n        } else {\n          if (traceSubscription) {\n            traceSubscription.unsubscribe();\n          }\n\n          traceSubscription = undefined;\n        }\n      },\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilComplete = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => {\n      },\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilFirst = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => {\n      }\n    )\n  ).subscribe(subscriber);\n});\n\nexport const trace = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nɵapplyMixins(AngularFirePerformance, [proxyPolyfillCompat]);\n","import { ApplicationRef, Injectable, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first, tap } from 'rxjs/operators';\n\nconst IS_STABLE_START_MARK = '_isStableStart';\nconst IS_STABLE_END_MARK = '_isStableEnd';\n\nfunction markStarts() {\n    if (typeof(window) !== 'undefined' && window.performance) {\n        window.performance.mark(IS_STABLE_START_MARK);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst started = markStarts();\n\n@Injectable()\nexport class PerformanceMonitoringService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    constructor(appRef: ApplicationRef) {\n        if (started) {\n            this.disposable = appRef.isStable.pipe(\n                first(it => it),\n                tap(() => {\n                    window.performance.mark(IS_STABLE_END_MARK);\n                    window.performance.measure('isStable', IS_STABLE_START_MARK, IS_STABLE_END_MARK);\n                })\n            ).subscribe();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\nimport { PerformanceMonitoringService } from './performance.service';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(\n    perf: AngularFirePerformance,\n    @Optional() _: PerformanceMonitoringService\n  ) {\n    // call anything here to get perf loading\n    // tslint:disable-next-line:no-unused-expression\n    perf.dataCollectionEnabled.then(() => {});\n  }\n}\n"]}